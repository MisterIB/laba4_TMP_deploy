{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documents/react4/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SignInRegister from \"./SignUp\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/register', {\n        username,\n        email,\n        password\n      }, {\n        withCredentials: true,\n        credentials: 'include'\n      });\n      const data = await response();\n      if (data.error) throw data.message;\n      signIn(username, password);\n    } catch (err) {\n      toast.error(err.message || 'Ошибка при регистрации');\n    }\n  };\n  const signIn = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/signin', {\n        username,\n        password\n      }, {\n        withCredentials: true,\n        credentials: 'include'\n      });\n      setUser(response.data);\n      localStorage.clear('user');\n      localStorage.setItem('user', JSON.stringify(response.data));\n    } catch (err) {\n      toast.error(err.message || 'Ошибка при входе');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: user === null ? /*#__PURE__*/_jsxDEV(SignInRegister, {\n      signIn: signIn,\n      register: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : navigate('/profile') //<p>Welcome, {user.username}! <button onClick={e => signOut()}>Sign Out</button> <Link to=\"/car\">Home</Link></p>\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6IF8oi2v+FFFMVJXFQinFj68c40=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useNavigate","axios","SignInRegister","toast","jsxDEV","_jsxDEV","Dashboard","_s","user","setUser","navigate","register","username","email","password","response","post","withCredentials","credentials","data","error","message","signIn","err","localStorage","clear","setItem","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/igor/Documents/react4/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport axios from \"axios\";\nimport SignInRegister from \"./SignUp\"\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Dashboard = () => {\n  const [user, setUser] = useState(null)\n  const navigate = useNavigate()\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/register', {username, email, password}, {withCredentials: true, credentials: 'include'})\n      const data = await response()\n      if (data.error) throw data.message\n      \n      signIn(username, password)\n    } catch (err) {\n      toast.error(err.message || 'Ошибка при регистрации');\n    }\n  }\n  \n  const signIn = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/signin', {username, password}, {withCredentials: true, credentials: 'include'})\n      setUser(response.data)\n      localStorage.clear('user')\n      localStorage.setItem('user', JSON.stringify(response.data))\n    } catch (err) {\n      toast.error(err.message || 'Ошибка при входе');\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      {\n        user === null ?\n        <SignInRegister\n          signIn={signIn}\n          register={register}\n        />\n        : navigate('/profile')//<p>Welcome, {user.username}! <button onClick={e => signOut()}>Sign Out</button> <Link to=\"/car\">Home</Link></p>\n      }\n    </div>\n  )\n}\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,UAAU;AACrC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,gCAAgC,EAAE;QAACJ,QAAQ;QAAEC,KAAK;QAAEC;MAAQ,CAAC,EAAE;QAACG,eAAe,EAAE,IAAI;QAAEC,WAAW,EAAE;MAAS,CAAC,CAAC;MACjJ,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAAC,CAAC;MAC7B,IAAII,IAAI,CAACC,KAAK,EAAE,MAAMD,IAAI,CAACE,OAAO;MAElCC,MAAM,CAACV,QAAQ,EAAEE,QAAQ,CAAC;IAC5B,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZpB,KAAK,CAACiB,KAAK,CAACG,GAAG,CAACF,OAAO,IAAI,wBAAwB,CAAC;IACtD;EACF,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAOV,QAAQ,EAAEE,QAAQ,KAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,8BAA8B,EAAE;QAACJ,QAAQ;QAAEE;MAAQ,CAAC,EAAE;QAACG,eAAe,EAAE,IAAI;QAAEC,WAAW,EAAE;MAAS,CAAC,CAAC;MACxIT,OAAO,CAACM,QAAQ,CAACI,IAAI,CAAC;MACtBK,YAAY,CAACC,KAAK,CAAC,MAAM,CAAC;MAC1BD,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACb,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZpB,KAAK,CAACiB,KAAK,CAACG,GAAG,CAACF,OAAO,IAAI,kBAAkB,CAAC;IAChD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAEhBtB,IAAI,KAAK,IAAI,gBACbH,OAAA,CAACH,cAAc;MACboB,MAAM,EAAEA,MAAO;MACfX,QAAQ,EAAEA;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,GACAxB,QAAQ,CAAC,UAAU,CAAC;EAAA;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErB,CAAC;AAEV,CAAC;AAAA3B,EAAA,CAvCKD,SAAS;EAAA,QAEIN,WAAW;AAAA;AAAAmC,EAAA,GAFxB7B,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}