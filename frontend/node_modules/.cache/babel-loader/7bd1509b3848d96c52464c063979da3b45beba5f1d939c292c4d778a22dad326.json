{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documents/react4/src/pages/Dashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SignInRegister from \"./SignUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  /*const fetchPosts = async () => {\n    try {\n      const response = await fetch('/posts')\n      \n      const data = await response.json()\n      if (data.error) throw data.message\n      \n      setPosts(data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n   useEffect(() => {\n    fetchPosts()\n  }, [])*/\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/register', {\n        username,\n        email,\n        password\n      });\n      const data = await response();\n      if (data.error) throw data.message;\n      signIn(username, password);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const signIn = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/signin', {\n        username,\n        password\n      });\n      console.log(response.data.username);\n      setUser(response.data);\n      console.log(user.username);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const signOut = async () => {\n    try {\n      const response = await fetch('/signout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      });\n      const data = await response.json();\n      if (data.error) throw data.message;\n      setUser(null);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const nav = async () => {\n    _s();\n    const navigate = useNavigate();\n    navigate('/car');\n  };\n  _s(nav, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [user === null ? /*#__PURE__*/_jsxDEV(SignInRegister, {\n      signIn: signIn,\n      register: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : navigate('/car') //<p>Welcome, {user.username}! <button onClick={e => signOut()}>Sign Out</button> <Link to=\"/car\">Home</Link></p>\n    , /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user === null ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"aboba \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/car\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"6IF8oi2v+FFFMVJXFQinFj68c40=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Link","useNavigate","axios","SignInRegister","jsxDEV","_jsxDEV","Dashboard","_s2","_s","$RefreshSig$","user","setUser","navigate","register","username","email","password","response","post","data","error","message","signIn","err","console","log","signOut","fetch","method","headers","body","JSON","stringify","json","nav","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/igor/Documents/react4/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SignInRegister from \"./SignUp\"\n\nconst Dashboard = () => {\n  const [user, setUser] = useState(null)\n  const navigate = useNavigate();\n\n  /*const fetchPosts = async () => {\n    try {\n      const response = await fetch('/posts')\n      \n      const data = await response.json()\n      if (data.error) throw data.message\n      \n      setPosts(data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    fetchPosts()\n  }, [])*/\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/register', {username, email, password})\n      const data = await response()\n      if (data.error) throw data.message\n      \n      signIn(username, password)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  \n  const signIn = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/signin', {username, password})\n      console.log(response.data.username)\n      setUser(response.data)\n      console.log(user.username)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  \n  const signOut = async () => {\n    try {\n      const response = await fetch('/signout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({}),\n      })\n\n      const data = await response.json()\n      if (data.error) throw data.message\n      \n      setUser(null)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  \n  const nav = async() => {\n    const navigate = useNavigate();\n    navigate('/car')\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        user === null ?\n        <SignInRegister\n          signIn={signIn}\n          register={register}\n        />\n        : navigate('/car')//<p>Welcome, {user.username}! <button onClick={e => signOut()}>Sign Out</button> <Link to=\"/car\">Home</Link></p>\n      }\n      \n      \n      <h1>Latest Posts</h1>\n      <div>\n        { user === null ?<p></p> :<p>aboba {user.username}</p> }\n        <ul>\n          <li>\n            <Link to=\"/car\">Home</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}