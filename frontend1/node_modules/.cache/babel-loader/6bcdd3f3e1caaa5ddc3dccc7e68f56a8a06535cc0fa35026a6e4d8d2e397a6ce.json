{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documents/react4/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  /*const fetchPosts = async () => {\n    try {\n      const response = await fetch('/posts')\n      \n      const data = await response.json()\n      if (data.error) throw data.message\n      \n      setPosts(data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n   useEffect(() => {\n    fetchPosts()\n  }, [])*/\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await fetch('/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw data.message;\n      signIn(username, password);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const signIn = async (username, password) => {\n    try {\n      const response = await fetch('/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw data.message;\n      setUser(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const signOut = async () => {\n    try {\n      const response = await fetch('/signout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      });\n      const data = await response.json();\n      if (data.error) throw data.message;\n      setUser(null);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const createPost = async (title, body) => {\n    try {\n      const response = await fetch('/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          body\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw data.message;\n      await fetchPosts();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [user === null ? /*#__PURE__*/_jsxDEV(SignInRegister, {\n      signIn: signIn,\n      register: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user.username, \"! \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => signOut(),\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this), user !== null && /*#__PURE__*/_jsxDEV(NewPost, {\n      createPost: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        ...post,\n        currentUser: user\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Dashboard","_s","user","setUser","useState","register","username","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","error","message","signIn","err","console","log","signOut","createPost","title","fetchPosts","className","children","SignInRegister","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","NewPost","posts","map","post","Post","currentUser","id","_c","$RefreshReg$"],"sources":["/home/igor/Documents/react4/src/pages/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const [user, setUser] = useState(null)\n\n  /*const fetchPosts = async () => {\n    try {\n      const response = await fetch('/posts')\n      \n      const data = await response.json()\n      if (data.error) throw data.message\n      \n      setPosts(data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    fetchPosts()\n  }, [])*/\n\n  const register = async (username, email, password) => {\n    try {\n      const response = await fetch('/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({username, email, password}),\n      })\n\n      const data = await response.json()\n      if (data.error) throw data.message\n      \n      signIn(username, password)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  \n  const signIn = async (username, password) => {\n    try {\n      const response = await fetch('/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({username, password}),\n      })\n\n      const data = await response.json()\n      if (data.error) throw data.message\n      \n      setUser(data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  \n  const signOut = async () => {\n    try {\n      const response = await fetch('/signout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({}),\n      })\n\n      const data = await response.json()\n      if (data.error) throw data.message\n      \n      setUser(null)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  \n  const createPost = async (title, body) => {\n    try {\n      const response = await fetch('/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({title, body}),\n      })\n\n      const data = await response.json()\n      if (data.error) throw data.message\n\n      await fetchPosts()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      {\n        user === null ?\n        <SignInRegister\n          signIn={signIn}\n          register={register}\n        />\n        : <p>Welcome, {user.username}! <button onClick={e => signOut()}>Sign Out</button></p>\n      }\n      \n      {user !== null && <NewPost createPost={createPost} />}\n      \n      <h1>Latest Posts</h1>\n      <div className=\"Posts\">\n        {posts.map(post => <Post key={post.id} {...post} currentUser={user} />)}\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}